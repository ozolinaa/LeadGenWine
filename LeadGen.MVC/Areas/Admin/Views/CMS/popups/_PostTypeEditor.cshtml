@model LeadGen.Code.CMS.PostType

<div class="modal fade" id="PostTypePopUp">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Add or Update Post Type</h4>
            </div>

            @using (Ajax.BeginForm("PostTypeEdit", new AjaxOptions { OnSuccess = "PostTypeEditHandler" }))
            {
                <div class="modal-body">

                    @Html.ValidationSummary()
                    @Html.HiddenFor(x => x.ID)
                    @Html.HiddenFor(x => x.SEO.changeFrequency)
                    @Html.HiddenFor(x => x.SEO.metaDescription)
                    @Html.HiddenFor(x => x.SEO.metaKeywords)
                    @Html.HiddenFor(x => x.SEO.priority)
                    @Html.HiddenFor(x => x.SEO.title)
                    @Html.HiddenFor(x => x.postSEO.changeFrequency)
                    @Html.HiddenFor(x => x.postSEO.metaDescription)
                    @Html.HiddenFor(x => x.postSEO.metaKeywords)
                    @Html.HiddenFor(x => x.postSEO.priority)
                    @Html.HiddenFor(x => x.postSEO.title)

                    <div class="row">
                        <div class="form-group col-sm-12 col-md-4">
                            @Html.LabelFor(x => x.name)
                            @Html.TextBoxFor(x => x.name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.name)
                        </div>
                        <div class="form-group col-sm-12 col-md-4">
                            @Html.LabelFor(x => x.code)
                            @Html.TextBoxFor(x => x.code, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.code)
                        </div>
                        <div class="form-group col-sm-12 col-md-4">
                            @Html.LabelFor(x => x.url)
                            @Html.TextBoxFor(x => x.url, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.url)
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-sm-12 col-md-4">
                            @Html.LabelFor(x => x.hasContentIntro)
                            @Html.CheckBoxFor(x => x.hasContentIntro, new { style = "display:block;" })
                            @Html.ValidationMessageFor(x => x.hasContentIntro)
                        </div>
                        <div class="form-group col-sm-12 col-md-4">
                            @Html.LabelFor(x => x.hasContentEnding)
                            @Html.CheckBoxFor(x => x.hasContentEnding, new { style = "display:block;" })
                            @Html.ValidationMessageFor(x => x.hasContentEnding)
                        </div>
                        <div class="form-group col-sm-12 col-md-4">
                            @Html.LabelFor(x => x.isBrowsable)
                            @Html.CheckBoxFor(x => x.isBrowsable, new { style = "display:block;" })
                            @Html.ValidationMessageFor(x => x.isBrowsable)
                        </div>
                    </div>
                </div>


                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" style="width:126px">Save</button>
                </div>
            }


        </div>
    </div>
</div>


<script>
    var popUpID = "PostTypePopUp";

    //alert($("#" + popUpID).find("#@Html.IdFor(x=>x.ID)").val());

    //Validate dynamicly added form
    $.validator.unobtrusive.parse("#" + popUpID + " form")

    //Show modal form
    $("#" + popUpID).modal('show');

    function PostTypeEditHandler(data, status, xhr) {

        //Romove modal-backdrop after previously shown modal panel
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();

        if (data.status == "success") {
            //Reload the page to display new term
            location.reload();
        }
        else {
            //Reload wrapper with new html
            $("#" + popUpID).parent().html(data)
        }

    }
</script>