@model LeadGen.Code.Lead.FieldGroup
@using LeadGen.Code.Lead


<div class="modal fade" id="FieldGroupEditPopUp">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Add or Update Lead Field Group</h4>
            </div>

            @using (Ajax.BeginForm("GroupEdit", new AjaxOptions { OnSuccess = "PopupFormAjaxHandler" }))
            {

                <div class="modal-body">

                    @Html.ValidationSummary()
                    @Html.HiddenFor(x=>x.ID)

                    <div class="row">
                        <div class="form-group col-sm-12 col-md-6">
                            @Html.LabelFor(x => x.code)
                            @Html.TextBoxFor(x => x.code, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.code)
                        </div>
                        <div class="form-group col-sm-12 col-md-6">
                            @Html.LabelFor(x => x.title)
                            @Html.TextAreaFor(x => x.title, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.title)
                        </div>
                        
                    </div>

                </div>


                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" style="width:126px">Save</button>
                </div>
            }


        </div>
    </div>
</div>

<script>
    //Validate dynamicly added form
    $.validator.unobtrusive.parse("#FieldGroupEditPopUp form")

    //Show modal form
    $("#FieldGroupEditPopUp").modal('show');

</script>