@model LeadGen.Code.Login
@{string formID = "LoginPasswordUpdateForm";}
@using (Ajax.BeginForm("PasswordUpdate", "Login", new { area = "" }, new AjaxOptions { UpdateTargetId = formID, InsertionMode = InsertionMode.ReplaceWith }, new { @class = "form-horizontal", id = formID }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(x => x.password, htmlAttributes: new { @class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(x => x.password, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(x => x.password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.newPassword.password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.newPassword.password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.newPassword.password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.newPassword.passwordConfirmation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.newPassword.passwordConfirmation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.newPassword.passwordConfirmation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
    if (ViewBag.status == true)
    {
        <script>LeadGen.ui.showNotificationLabel();</script>
    }
}
