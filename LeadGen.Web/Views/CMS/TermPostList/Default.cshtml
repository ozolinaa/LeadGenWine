@model X.PagedList.IPagedList<Post>
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core
@using LeadGen.Code.CMS;
@{
    CMSContext cmsContext = ViewBag.CMSContext;
    @section SEO{@{ await Html.RenderPartialAsync("DisplayTemplates/SEOFields", cmsContext.post.SEO); }}
    @section CustomCSS{@{ await Html.RenderPartialAsync("DisplayTemplates/CustomCSS", cmsContext.post.customCSS); }}
}

@*@Html.ActionLink("<= "+ cmsContext.postTypeTaxonomy.taxonomy.name, "Index", new { urlPath = String.Format("{0}/", cmsContext.postType.typeURL) })*@

@{ await Html.RenderPartialAsync("PostTitle", new PostTitle(cmsContext.post)); }

<div class="row list">
    @for (int i = 0; i < Model.Count(); i++)
    {
        @Html.DisplayFor(x => x[i], "PostPreview")
    }
</div>

@Html.PagedListPager(Model,
    page => Url.Action("Index", new { urlPath = String.Format("{0}/page/{1}", cmsContext.urlPath, page) }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, ContainerDivClasses = new string[] { "text-center" } }
)

<nav>
    @if (cmsContext.widgets != null)
    {
        Post teaserWidget = cmsContext.widgets.FirstOrDefault(x => x.postURL == "kak-zakazat-pamyatnik-i-ne-pereplatit");
        if (teaserWidget != null)
        {
            await Html.RenderPartialAsync("Widgets/_TeaserWithBackground", teaserWidget);
        }
    }
</nav>

@if (cmsContext.widgetsLayoutSidebarRight?.Any() == true)
{
    @section Sidebar{
        @foreach (Post widget in cmsContext.widgetsLayoutSidebarRight)
        {
            await Html.RenderPartialAsync("Widgets/_WidgetLayout", widget);
        }
    }
}