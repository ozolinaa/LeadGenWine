@model X.PagedList.IPagedList<LeadGen.Code.CMS.Post>
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core
@using LeadGen.Code.CMS

@{
    CMSContext cmsContext = ViewBag.CMSContext;
    @section SEO{@{ await Html.RenderPartialAsync("DisplayTemplates/SEOFields", cmsContext.post.SEO); }}
    @section CustomCSS{@{await Html.RenderPartialAsync("DisplayTemplates/CustomCSS", cmsContext.post.customCSS);}}
}

@{ await Html.RenderPartialAsync("PostTitle", new PostTitle(cmsContext.post)); }
@Html.Raw(cmsContext.post.contentIntro)
@Html.Raw(cmsContext.post.contentPreview)
@Html.Raw(cmsContext.post.contentMain)
@Html.Raw(cmsContext.post.contentEnding)


<div class="row list">
    @for (int i = 0; i < Model.Count(); i++)
    {
        @Html.DisplayFor(x => x[i], "PostTermPreview")
    }
</div>


@Html.PagedListPager(Model,
    page => Url.Action("Index", new { urlPath = String.Format("{0}/page/{1}", cmsContext.urlPath, page) }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, ContainerDivClasses = new string[] { "text-center" } }
)

@if (cmsContext.widgetsLayoutSidebarRight?.Any() == true)
{
    @section Sidebar{
        @foreach (Post widget in cmsContext.widgetsLayoutSidebarRight)
        {
            await Html.RenderPartialAsync("Widgets/_WidgetLayout", widget);
        }
    }
}