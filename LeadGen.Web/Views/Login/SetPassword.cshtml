@model LeadGen.Code.Login
@using LeadGen.Code.Tokens
@{
    ViewBag.Title = "Login";
    Token token = ViewData["token"] as Token;
    bool firstPassword = token is NewLoginEmailVerificationToken;
    string formID = "LoginPasswordSetForm";
}

<div class="container single-alert-container container-login">
    <div class="single-alert-container-content row">
        <h4>@(firstPassword ? "Set Password" : "Recover Password")</h4>

        @using (Html.BeginForm("SetNewPassword", "Login", new { tokenKey = token.Key }, FormMethod.Post, true, new
        {
            id = formID
        }))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(x => x.newPassword.password, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(x => x.newPassword.password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.newPassword.password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.newPassword.passwordConfirmation, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(x => x.newPassword.passwordConfirmation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.newPassword.passwordConfirmation, "", new { @class = "text-danger" })
                </div>
            </div>

            <input type="submit" value="Save" class="btn btn-default" />

        }
    </div>
</div>

<style>
    #@formID {
        margin-top: 30px;
    }
        #@formID .form-group input {
            margin-left: auto;
            margin-right: auto;
        }
        #@formID input[type="submit"] {
            margin-top: 20px;
        }
</style>