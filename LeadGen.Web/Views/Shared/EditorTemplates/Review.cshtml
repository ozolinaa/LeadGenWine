@model LeadGen.Code.Lead.Review
@using LeadGen.Code.Business
@using LeadGen.Code.Lead
@using System.Net

<style>
    .review-price {
        display:inline-block;
        width:100px;
    }
</style>

<div class="form-horizontal">
    <div class="form-group">
        @Html.Label("", "В какую мастерскую Вы обратились", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @for (int i = 0; i < Model.businessOptions.Count(); i++)
            {
                @Html.HiddenFor(x => x.businessOptions[i].ID)
                @Html.HiddenFor(x => x.businessOptions[i].name)
                @Html.HiddenFor(x => x.businessOptions[i].billing.name)

                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(x => x.businessID, Model.businessOptions[i].ID)
                        @Model.businessOptions[i].name (<a href="@Model.businessOptions[i].webSite" target="_blank">@WebUtility.UrlDecode(Model.businessOptions[i].webSite)</a>)
                    </label>
                </div>
            }
            <div class="radio">
                <label>
                    @Html.RadioButtonFor(x => x.otherBusiness, true)
                    <span class="otherBusinessLabel">Другая мастерская</span>
                    <span class="otherBusinessInput">
                        @Html.TextBoxFor(model => model.otherBusinessName, new { @class = "form-control", placeholder = "Название мастерской" })
                        @Html.ValidationMessageFor(model => model.otherBusinessName, "", new { @class = "text-danger" })
                    </span>
                </label>
            </div>
            <div class="radio">
                <label>
                    @Html.RadioButtonFor(x => x.notCompleted, true)
                    Ещё не исполнена
                </label>
            </div>
        </div>
        @Html.ValidationMessage("business", new { @class = "text-danger" })
    </div>

    <div class="reviewDetails">

        <div class="measureScores">
            @{
                Dictionary<Review.Measure, string> measureNames = new Dictionary<Review.Measure, string>()
                        {
                            {Review.Measure.Price,"Насколько справедлива цена" },
                            {Review.Measure.Quality,"Качество памятника и работы" },
                            {Review.Measure.Speed,"Выдержаны ли сроки" },
                            {Review.Measure.Comfort,"Отношение к клиенту" }
                        };
            }
            @Html.EditorFor(x => x.measureScores, "Rating", new { measureNames = measureNames })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.orderPricePart1, "Полная стоимость заказа", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>
                    Стоимость памятника
                    <input type="number" class="form-control review-price" name="@Html.NameFor(x => x.orderPricePart1)" value="@Model.orderPricePart1" placeholder="руб." />
                    и установки
                    <input type="number" class="form-control review-price" name="@Html.NameFor(x => x.orderPricePart2)" value="@Model.orderPricePart2" placeholder="руб." />
                    (можно примерно)
                </p>
                @Html.ValidationMessageFor(model => model.orderPricePart1, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.orderPricePart2, "", new { @class = "text-danger" })
                <p>Эти данные позволят нам поддерживать актуальные цифры для <a href="http://izgotovleniepamyatnikov.ru/na-mogilu/ceny_na_pamyatniki/" target="_blank">обзора о ценах</a> на памятники.</p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.reviewText, "Ваш отзыв (по Вашему желанию)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.reviewText, new { @class = "form-control", style = "max-width:100%; height:150px" })
                @Html.ValidationMessageFor(model => model.reviewText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.authorName, "Ваше имя", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.authorName, new { @class = "form-control", style = "max-width:100%;", placeholder = "Этим именем будет подписан Ваш отзыв" })
                @Html.ValidationMessageFor(model => model.authorName, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

</div>