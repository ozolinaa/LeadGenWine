@model LeadGen.Code.Map.Location
@using LeadGen.Code.Helpers;
@{
    string googleMapsAPIKey = SysHelper.AppSettings.GoogleSettings.GoogleMapsAPIPublicKey;
    //string mapID = Html.IdForModel().ToString();
    string mapID = Guid.NewGuid().ToString().Replace('-', '_');
}

<div id="map_@mapID" class="lg-map"></div>

<script>
    (function () {
        var LeadGen = window.LeadGen || (window.LeadGen = {});
        var settings = LeadGen.settings || (LeadGen.settings = {});
        settings.googleMapsAPIKey = "@googleMapsAPIKey";
        var googleMaps = LeadGen.googleMaps || (LeadGen.googleMaps = {});
        var googleMap = {
            id: "map_@mapID"
        };
        googleMaps[googleMap.id] = googleMap;

        googleMap.instance = null;

        var zoomLevel = @Model.Zoom;
        if (@Model.RadiusMeters > 0) { 
            var radius = @Model.RadiusMeters;
            var scale = radius / 400;
            zoomLevel = (16 - Math.log(scale) / Math.log(2));
        } else if (zoomLevel == 0) {
            zoomLevel = 14;
        }

        googleMap.init = function() {
            var center = {lat: @Model.Lat, lng: @Model.Lng};
            var map = new google.maps.Map(document.getElementById(googleMap.id), {
                zoom: zoomLevel,
                center: center,
                scrollwheel: false,
            });
            map.initialCenter = center;
            //Make the map availeble from global scope
            googleMap.instance = map;

            google.maps.event.addListener(map, 'click', function(event){
                this.setOptions({scrollwheel:true});
            });

            

            var marker = new google.maps.Marker({
                map: map,
                anchorPoint: new google.maps.Point(0, -29),
                draggable:false,
                visible:true,
                position:{lat: @Model.Lat, lng: @Model.Lng}
            });

            // Add circle overlay and bind to marker
            var circle = new google.maps.Circle({
                fillColor: '#ffffff',
                fillOpacity: .6,
                strokeWeight: 1,
                strokeColor: '#ff0000',
                draggable: false,
                editable: false,
                map: map,
                center: center,
                radius: @Model.RadiusMeters,
                clickable: false
            });
            circle.bindTo('center', marker, 'position');

            var infowindow = new google.maps.InfoWindow();
            infowindow.setContent('<div><strong>@Model.Name</strong><br>@Model.StreetAddress');
            infowindow.open(map, marker);
        };

        if(window.google != null && window.google.maps != null) {
            googleMap.init();
        }

    })();

</script>