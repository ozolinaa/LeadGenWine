@model List<LeadGen.Code.CMS.PostTypeTaxonomy>

<div class="modal fade" id="PostTypeTaxonomyEditPopUp">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Manage Post Type Taxonomies</h4>
            </div>

            @using (Html.BeginForm("PostTypeTaxonomyEdit", null, null, FormMethod.Post, true, new
    {
        data_ajax = "true",
        data_ajax_success = "PostTypeTaxonomyHandler",
    }))
{
        <div class="modal-body">
            <div class="row form-inline">
                @for (int i = 0; i < Model.Count; i++)
        {
            <div class="form-group col-sm-12">
                @Html.HiddenFor(x => x[i].forPostTypeID)
                @Html.HiddenFor(x => x[i].taxonomy.ID)
                @Html.HiddenFor(x => x[i].taxonomy.name)
                @Html.HiddenFor(x => x[i].postType.ID)
                @Html.HiddenFor(x => x[i].postType.name)
                @Html.CheckBoxFor(x => x[i].taxonomy.isChecked)
                @Html.LabelFor(x => x[i].taxonomy.isChecked, Model[i].taxonomy.name)
                @Html.TextBoxFor(x => x[i].postType.url, new { @class = "form-control", placeholder = "Term URL Prefix" })
                @Html.ValidationMessageFor(x => x[i].taxonomy.isChecked)
                @Html.ValidationMessageFor(x => x[i].postType.url)
            </div>
}
            </div>
        </div>


        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-primary" style="width:126px">Save</button>
        </div>
}


        </div>
    </div>
</div>


<script>
    var popUpID = "PostTypeTaxonomyEditPopUp";

    //Validate dynamicly added form
    $.validator.unobtrusive.parse("#" + popUpID + " form")

    //Show modal form
    $("#" + popUpID).modal('show');

    function PostTypeTaxonomyHandler(data, status, xhr) {

        //Romove modal-backdrop after previously shown modal panel
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();

        if (status == "success" && data == "") {
            //Reload the page to display new term
            location.reload();
        }
        else {
            //Reload wrapper with new html
            $("#" + popUpID).parent().html(data)
        }

    }
</script>