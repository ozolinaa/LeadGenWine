@model LeadGen.Code.CMS.Post
@using LeadGen.Code.CMS;

@{
    ViewBag.Title = "PostEdit";
}

<div id="post-edit-page">

    <!--Image Upload POPUP -->
    <div class="modal fade" id="AttachmentsUploadPopUp">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                @using (Html.BeginForm("AttachmentsUpload", null, new { PostID = Model.ID }, FormMethod.Post, null, new { id = "uploader", enctype = "multipart/form-data" }))
                {
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title">AttachmentsUpload</h4>
                    </div>

                    <div class="modal-body">
                        <p>Select Files</p>
                        <input type="file" id="filesToUpload" name="filesToUpload" value="" multiple="multiple" />
                    </div>

                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" style="width:126px">Upload</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <h2>
        @Html.ActionLink(String.Format("< Manage {0}", "Taxonomy"), "Terms", "Taxonomy", new { taxonomyID = Model.forTaxonomyID }, new { style = "margin-right:10px;" })
        Term #@Model.forTermID for @Model.postType.name
    </h2>


    @using (Html.BeginForm("TermPostEdit", null, FormMethod.Post))
    {
        @Html.HiddenFor(x => x.ID)
        <div class="row">
            <div class="col-md-9">

                <div class="form-group">
                    @Html.LabelFor(x => x.title)
                    @Html.TextBoxFor(x => x.title, new { @class = "form-control", placeholder = "Post Title", style = "max-width:none;" })
                    @Html.ValidationMessageFor(x => x.title)
                </div>

                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-addon">@String.Format("{0}/{1}/", LeadGen.Code.Helpers.SysHelper.AppSettings.SiteUrl, Model.postType.url)</div>
                        @Html.TextBoxFor(x => x.postURL, new { @class = "form-control", placeholder = "Post URL", style = "max-width:none;", @readonly = "readonly" })
                    </div>
                </div>

                @if (Model.postType.hasContentIntro)
                {
                    <div class="row">
                        <div class="form-group col-xs-12">
                            @Html.LabelFor(x => x.contentIntro)
                            @Html.TextAreaFor(x => x.contentIntro, 20, 0, new { @class = "tinymce", style = "height:100px;" })
                        </div>
                    </div>
                }

                <div id="attachaments" class="row attachaments">
                    @{await Html.RenderPartialAsync("_PostAttahments", Model);}
                </div>

                <div class="row">
                    <div class="form-group col-xs-12">
                        @Html.LabelFor(x => x.content)
                        <button type="button" class="btn btn-default" onclick="$('#AttachmentsUploadPopUp').modal('show')" style="float:right;">Upload Attachments</button>
                        @Html.TextAreaFor(x => x.content, 20, 0, new { @class = "tinymce", style = "height:500px;" })
                    </div>
                </div>

                @if (Model.postType.hasContentEnding)
                {
                    <div class="row">
                        <div class="form-group col-xs-12">
                            @Html.LabelFor(x => x.contentEnding)
                            @Html.TextAreaFor(x => x.contentEnding, 20, 0, new { @class = "tinymce", style = "height:100px;" })
                        </div>
                    </div>
                }

                @if (Model.fields != null && Model.fields.Count > 0)
                {
                    <div class="panel panel-default">
                        <div class="panel-heading">Post Custom Fields</div>
                        <div class="panel-body">
                            @Html.EditorFor(x => x.fields)
                        </div>
                    </div>
                }

                <div class="panel panel-default">
                    <div class="panel-heading">Search Engine Optimization</div>
                    <div class="panel-body">
                        @Html.EditorFor(x => x.SEO)
                    </div>
                </div>

            </div>

            <div class="col-md-3">

                <div class="panel panel-default">
                    <div class="panel-heading">Post Status</div>
                    <div class="panel-body">

                        <div class="form-group">
                            @Html.LabelFor(x => x.authorID)
                            @Html.TextBoxFor(x => x.authorID, new { @class = "form-control" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.postStatus.ID)
                            @Html.DropDownListFor(x => x.postStatus.ID, new SelectList((List<Post.Status>)ViewBag.statusList, "ID", "name"), new { @class = "form-control" })
                        </div>

                        @if (Model.datePublished != null)
                        {


                            <div class='form-group'>
                                @Html.LabelFor(x => x.datePublished)
                                <div class="input-group date datetimepicker">
                                    @Html.TextBoxFor(x => x.datePublished, new { @class = "form-control" })
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                        }

                    </div>
                    <div class="panel-footer">
                        <a href="@String.Format("{0}{1}", Model.Url, Model.postStatus.ID == 50 ? "" : "?preview=True")"
                           class="btn btn-default" target="_blank">
                            @(Model.postStatus.ID == 50 ? "Open Post" : "Preview Post")
                        </a>

                        <button type="submit" class="btn btn-primary pull-right" id="LeadGenPostSaveBtn">Save</button>
                    </div>
                </div>

            </div>
        </div>

    }
</div>



@section Scripts
    {
    <script src="~/js/LeadGen-PostEdit.js"></script>
    <script>
        LeadGen.PostEdit = LeadGen.PostEdit || {};
        LeadGen.PostEdit.PostTypeID = "@Model.postType.ID";
        LeadGen.PostEdit.SearchPostsJsonUrl = "@Url.Action("SearchPostsJson", "CMS", new { area = "admin"})";

        LeadGen.PostEdit.init();


            //save post on onsave
    document.addEventListener("keydown", function (e) {
        if ((window.navigator.platform.match("Mac") ? e.metaKey : e.ctrlKey) && e.keyCode == 83) {
            e.preventDefault();
            // Process the event here (such as click on submit button)
            document.getElementById("LeadGenPostSaveBtn").click();
        }
    }, false);
    </script>
}